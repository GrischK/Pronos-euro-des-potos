services:
  db:
    image: postgres:15-alpine
    environment:
      - POSTGRES_PASSWORD=postgres
      - PGUSER=postgres
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -d postgres -U postgres" ]
      interval: 10s
      timeout: 5s
      retries: 5
    ports:
      - 5432:5432
    volumes:
      - prodDB_pronos:/var/lib/postgresql/data
    networks:
      - prodNetwork_pronos-des-potos

  server:
    restart: always
    depends_on:
      db:
        condition: service_healthy
    environment:
      DB_HOST: db
    env_file:
      ./server/.env.production

    #      NODE_ENV: ${NODE_ENV:-production}
    #      SERVER_HOST: ${SERVER_HOST:-localhost}
    #      SERVER_PORT: ${SERVER_PORT:-4000}
    #      JWT_PRIVATE_KEY: ${JWT_PRIVATE_KEY}
    #      CORS_ALLOWED_ORIGINS: ${CORS_ALLOWED_ORIGINS:-http://localhost:3000,http://localhost:4000}
    #      FOOTBALL_DATA_API_TOKEN: ${FOOTBALL_DATA_API_TOKEN}
    #      EMAIL_ADDRESS: ${EMAIL_ADDRESS}
    #      EMAIL_PASS: ${EMAIL_PASS}
    image: grischk/pronos-des-potos_server
    networks:
      - prodNetwork_pronos-des-potos
  #    healthcheck:
  #      test: 'curl --fail --request GET -H ''content-type:application/json'' --url ''http://localhost:4000/graphql?query=%7B__typename%7D'''
  #      interval: 5s
  #      timeout: 5s
  #      retries: 10

  client:
    image: grischk/pronos-des-potos_client
    networks:
      - prodNetwork_pronos-des-potos

  nginx:
    image: nginx:1.21.3
    depends_on:
      client:
        condition: service_started
      server:
        condition: service_healthy
    restart: always
    env_file:
      ./server/.env.production
    ports:
      - ${GATEWAY_PORT}:80
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./logs:/var/log/nginx
    networks:
      - prodNetwork_pronos-des-potos

volumes:
  prodDB_pronos:

networks:
  prodNetwork_pronos-des-potos:
