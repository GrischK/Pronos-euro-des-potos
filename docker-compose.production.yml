services:
  db:
    image: postgres:15-alpine
    environment:
      POSTGRES_PASSWORD: ${DB_PASS-postgres}
      PGUSER: ${DB_USER-postgres}
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -d postgres -U postgres" ]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - prodDb:/var/lib/postgresql/data

  server:
    depends_on:
      db:
        condition: service_healthy
    environment:
      DB_HOST: db
      DB_PASS: ${DB_PASS-postgres}
      DB_USER: ${DB_USER-postgres}
      JWT_PRIVATE_KEY: ${JWT_PRIVATE_KEY:-abcdfzfefzefzefzeefghijkl}
      NODE_ENV: ${NODE_ENV:-production}
      CORS_ALLOWED_ORIGINS: ${CORS_ALLOWED_ORIGINS:-http://localhost:3000,http://localhost:4000,https://pronosdespotos.com,http://localhost:8000}
      FOOTBALL_DATA_API_TOKEN: ${FOOTBALL_DATA_API_TOKEN}
      EMAIL_ADDRESS: ${EMAIL_ADDRESS}
      EMAIL_PASS: ${EMAIL_PASS}
    stop_grace_period: 0s
    image: grischk/pronos-des-potos_server

  client:
    image: grischk/pronos-des-potos_client
    stop_grace_period: 0s

  gateway:
    stop_grace_period: 0s
    restart: always
    build:
      context: gateway
      dockerfile: Dockerfile.production
    ports:
      - 8000:80

volumes:
  db:
