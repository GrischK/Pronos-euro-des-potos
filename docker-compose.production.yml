services:
  prodDb:
    image: postgres:15-alpine
    environment:
      - DB_USER=${DB_USER}
      - DB_PASS=${DB_PASS}
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -d postgres -U postgres" ]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - prodDb:/var/lib/postgresql/data
    networks:
      - prodNetwork

  server:
    depends_on:
      prodDb:
        condition: service_healthy
    env_file:
      ./.env.production
    environment:
      - NODE_ENV=${NODE_ENV:-production}
      - DB_USER=${DB_USER:-postgres}
      - DB_PASS=${DB_PASS:-postgres"}
      - DB_NAME=${DB_NAME:-postgres"}
      - DB_HOST=${DB_HOST:-prodDb}
      - SERVER_HOST=${SERVER_HOST:-localhost}
      - SERVER_PORT=${SERVER_PORT:-4000}
      - JWT_PRIVATE_KEY=${JWT_PRIVATE_KEY:-abcdfzfefzefzefzeefghijkl}
      - CORS_ALLOWED_ORIGINS=${CORS_ALLOWED_ORIGINS:-http://localhost:3000,https://pronosdespotos.com,http://localhost:8000}
      - FOOTBALL_DATA_API_TOKEN=${FOOTBALL_DATA_API_TOKEN}
      - EMAIL_ADDRESS=${EMAIL_ADDRESS}
      - EMAIL_PASS=${EMAIL_PASS}
    image: grischk/mapado-server
    networks:
      - prodNetwork
    healthcheck:
      test: 'curl --fail --request GET -H ''content-type:application/json'' --url ''http://localhost:4000/graphql?query=%7B__typename%7D'''
      interval: 5s
      timeout: 5s
      retries: 10

  client:
    image: grischk/mapado-client
    networks:
      - prodNetwork

  nginx:
    image: nginx:1.21.3
    depends_on:
      client:
        condition: service_started
      server:
        condition: service_healthy
    restart: always
    ports:
      - 8000:80
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./logs:/var/log/nginx
    networks:
      - prodNetwork

volumes:
  prodDb:

networks:
  prodNetwork: