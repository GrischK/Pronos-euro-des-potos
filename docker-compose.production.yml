services:
  db:
    image: postgres:15-alpine
    environment:
      - POSTGRES_USER="postgres"
      - POSTGRES_PASSWORD="postgres"
      - POSTGRES_DB="postgres"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -d postgres -U postgres" ]
      interval: 10s
      timeout: 5s
      retries: 5
    ports:
      - 5432:5432
    volumes:
      - db_pronos:/var/lib/postgresql/data
    networks:
      - prodNetwork_pronos

  server:
    build: ./server
    env_file:
      ./.env.production
    command: sh -c "npm run build && npm run prod"
    expose:
      - 4000
    environment:
      - NODE_ENV=production
      - SERVER_PORT=4000
      - DB_HOST=db
      - CORS_ALLOWED_ORIGINS=http://localhost:8000,https://pronosdespotos.com
    depends_on:
      - db
    networks:
      - prodNetwork_pronos

  client:
    build: ./client
    command: sh -c "npm run build"
    volumes:
      - web-client-build:/app/build
    environment:
      - NODE_ENV=production
    networks:
      - prodNetwork_pronos

  nginx:
    image: nginx:1.21.3
    depends_on:
      - server
      - client
    restart: always
    ports:
      - 8000:80
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - web-client-build:/web-client-build
      - ./logs:/var/log/nginx
    networks:
      - prodNetwork_pronos

volumes:
  web-client-build:
  db:

networks:
  prodNetwork_pronos: